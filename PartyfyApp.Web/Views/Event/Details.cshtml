@model EventDetailsViewModel

<div class="container mt-4">
    <div class="row">
        <div class="col-md-8">
            @* Uncomment to display poster image *@
            @* <img src="@Url.Content(Model.PosterImagePath)" alt="@Model.Title" class="img-fluid rounded mb-3" /> *@
            <h2 class="display-4" style="color: #BF0065; font-weight: bold;">@Model.Title</h2>
            <div class="bg-light p-3 rounded mb-3" style="border-left: 4px solid #BF0065;">
                <p class="text-muted" style="font-weight: bold;"><strong>Date:</strong> @Model.EventDate.ToString("MMMM dd, yyyy")</p>
                <p class="text-muted" style="font-weight: bold;"><strong>Location:</strong> @Model.Location</p>
            </div>
            <p class="lead" style="color: #BF0065; font-weight: 500;">@Model.Description</p>
        </div>
        <div class="col-md-4">
            <div class="card border-light mb-3" style="background-color: #970176; color: white;">
                <div class="card-header">
                    <h3>Contact Information</h3>
                </div>
                <div class="card-body">
                    <p><strong>Contact:</strong> @Model.HosterContact</p>
                </div>
            </div>

            <div class="card border-light mb-3" style="background-color: #970176; color: white;">
                <div class="card-header">
                    <h3>Tickets</h3>
                </div>
                <div class="card-body">
                    @if (Model.VipTicketPrice.HasValue && Model.VipTicketQuantity.HasValue)
                    {
                        <p><strong>VIP Ticket:</strong> $@Model.VipTicketPrice - @Model.VipTicketQuantity left</p>
                    }
                    @if (Model.StandardTicketPrice.HasValue && Model.StandardTicketQuantity.HasValue)
                    {
                        <p><strong>Standard Ticket:</strong> $@Model.StandardTicketPrice - @Model.StandardTicketQuantity left</p>
                    }
                    @if (Model.StandingTicketPrice.HasValue && Model.StandingTicketQuantity.HasValue)
                    {
                        <p><strong>Standing Ticket:</strong> $@Model.StandingTicketPrice - @Model.StandingTicketQuantity left</p>
                    }

                    <a asp-action="BuyTickets" asp-route-id="@Model.Id" class="btn" style="background-color: #BF0065; color: white; border-radius: 25px; font-size: 1.1rem; width: 100%; margin-top: 1rem;">
                        Buy Ticket
                    </a>
                </div>
            </div>

            <div class="d-flex mt-3">
                @if (Model.IsLiked)
                {
                    <a asp-controller="Event" asp-action="Unlike" asp-route-id="@Model.Id" class="btn btn-danger w-100" style="border-radius: 25px; font-size: 1.1rem; background-color: #970176; color: white;">
                        <i class="fas fa-thumbs-down"></i> Unlike </a>
                }
                else
                {
                    <a asp-controller="Event" asp-action="Like" asp-route-id="@Model.Id" class="btn btn-primary w-100" style="border-radius: 25px; font-size: 1.1rem; background-color: #BF0065; color: white;">
                        <i class="fas fa-heart"></i> Like
                    </a>
                }
            </div>
        </div>
    </div>
</div>

<style>
    body {
        font-family: 'Poppins', sans-serif; /* Choose a suitable font family */
        background-color: #f0f0f0;
        color: #333;
    }

    h2, h3 {
        font-weight: bold;
        margin-bottom: 1rem;
    }

    .card {
        border-radius: 15px; /* Rounded corners for cards */
    }

    .lead {
        font-size: 1.2rem; /* Slightly larger font for description */
    }

    .btn {
        border-radius: 25px; /* Rounded buttons */
    }

    /* Additional styling */
    .bg-light {
        background-color: #f8f9fa !important; /* Light background for information section */
        border-radius: 10px; /* Rounded corners for the info section */
    }
</style>
