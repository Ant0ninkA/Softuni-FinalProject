@model AllEventsQueryModel

@{
    ViewBag.Title = "All Events";
}
<style>
    body {
        color: #BF0065
    }

    .form-container {
        padding: 20px;
        background-color: #f9f9f9;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .custom-select, .custom-input {
        border: 1px solid #ccc;
        border-radius: 10px;
        transition: border-color 0.3s;
    }

    .custom-button {
        background-color: #BF0065;
        border-color: #BF0065;
        color: white;
        margin-top: 10px;
        padding: 8px 13px;
        border-radius: 20px;
        transition: background-color 0.3s, transform 0.2s;
    }

    .custom-button:hover {
         color: white;
         background-color: #970176;
         border-color: #970176;
         transform: scale(1.05);
    }

    .pagination-btn {
        color: white;
        background-color: #BF0065;
        border-radius: 20px; 
        width: 45px;
        height: 35px;
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 1.2rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        border: none;
        transition: background-color 0.3s ease, transform 0.2s ease;
    }


    .form-group {
        margin-bottom: 15px;
    }

</style>

<h2 class="text-center">@ViewBag.Title</h2>
<hr />

<form method="get">
    <div class="row d-flex justify-content-between">
        <div class="form-group col-md-3">
            <div class="form-group">
                <label asp-for="Category"></label>
                <select asp-for="Category" class="form-control custom-select">
                    <option value="">All</option>
                    @foreach (var category in Model.Categories)
                    {
                        <option value="@category">@category</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group col-md-3">
            <label asp-for="SearchString"></label>
            <input asp-for="SearchString" class="form-control custom-input" placeholder="...">
        </div>

        <div class="form-group col-md-3">
            <div class="form-group">
                <label asp-for="EventSorting"></label>
                <select asp-for="EventSorting" class="form-control custom-select">
                    <option value="0">Upcoming</option>
                    <option value="1">Price Ascending (Standard Ticket)</option>
                    <option value="2">Price Descending (Standard Ticket)</option>
                </select>
            </div>
        </div>

        <div class="form-group col-md-3 d-flex align-items-center">
            <div class="form-group p-2">
                <input type="submit" value="Search" class="custom-button" />
            </div>
        </div>
    </div>
</form>

 <div class="row mb-5">
    @if (!Model.Events.Any())
    {
        <h2 class="text-center">No events found by the given criteria!</h2>
    }

    <div class="row">
        @foreach (var currEvent in Model.Events)
        {
            <partial name="_EventPartial" model="@currEvent" />
        }
    </div>

    @{
        int previousPage = Model.CurrentPage - 1;
        if (previousPage < 1)
        {
            previousPage = 1;
        }

        int maxPage = (int)Math.Ceiling((double)Model.TotalEvents / Model.EventsPerPage);
    }

    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
        <a class="btn pagination-btn @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
           asp-controller="Event"
           asp-action="All"
           asp-route-currentPage="@previousPage"
           asp-route-category="@Model.Category"
           asp-route-searchTerm="@Model.SearchString"
           asp-route-sorting="@((int)Model.EventSorting)"><<</a>
    </div>

    @{
        bool shouldNextPageBeDisabled = Model.CurrentPage == maxPage || !Model.Events.Any();
    }

    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
        <a class="btn pagination-btn @(shouldNextPageBeDisabled ? "disabled" : string.Empty)"
           asp-controller="Event"
           asp-action="All"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-category="@Model.Category"
           asp-route-searchTerm="@Model.SearchString"
           asp-route-sorting="@((int)Model.EventSorting)">>></a>
    </div>
</div>





